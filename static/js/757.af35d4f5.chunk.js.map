{"version":3,"file":"static/js/757.af35d4f5.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Prifile/Profile.module.css?b928","webpack://my-app/./src/components/Prifile/MyPosts/ProfileInfo/ProfileInfo.module.css?ee1e","components/Prifile/ProfileStatusWithHooks.tsx","components/Prifile/MyPosts/ProfileInfo/ProfileInfo.tsx","webpack://my-app/./src/components/Prifile/MyPosts/Post/Post.module.css?9816","components/Prifile/MyPosts/Post/Post.tsx","webpack://my-app/./src/components/Prifile/MyPosts/MyPosts.module.css?5161","components/Prifile/ProfileForm/ProfileForm.tsx","components/Prifile/MyPosts/MyPosts.tsx","components/Prifile/Profile.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Profile_wrapper__n6oIh\",\"status\":\"Profile_status__Mz9kl\"};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"ProfileInfo_image__r4lz6\",\"profile_img\":\"ProfileInfo_profile_img__w9X07\",\"user_img\":\"ProfileInfo_user_img__Rlqgi\",\"fullName\":\"ProfileInfo_fullName__mEusS\",\"full\":\"ProfileInfo_full__q0wix\",\"id\":\"ProfileInfo_id__DZHw1\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useAppDispatch} from \"../../redux/hooks\";\r\nimport style from './Profile.module.css'\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: any\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusPropsType) => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setToggle(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setToggle(false)\r\n        dispatch(updateStatus(status))\r\n    }\r\n\r\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            {toggle ?\r\n                <input\r\n                    onChange={changeStatus}\r\n                    onBlur={deactivateEditMode}/>\r\n                :\r\n                <span\r\n                    onDoubleClick={activateEditMode}><strong>My status:</strong> <span className={style.status}>{status}</span>\r\n                </span>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport p from './ProfileInfo.module.css'\r\nimport {ProfileStatusWithHooks} from \"../../ProfileStatusWithHooks\";\r\nimport {useAppSelector} from \"../../../../redux/hooks\";\r\n\r\n\r\nexport const ProfileInfo = () => {\r\n\r\n    const data = useAppSelector(state => state.profileReducer)\r\n\r\n    // if (!props.userPhoto) {\r\n    //     return <Preloader/>\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            About you\r\n            <div>\r\n                <div className={p.fullName}>\r\n                    Nick: <span className={p.full}>{data.data.fullName}</span>\r\n                </div>\r\n                <div>\r\n                    <strong>Photo:</strong>\r\n                    {\r\n                        data.data.photos.small ?\r\n                        <img src={data.data.photos.small}/> :\r\n                        <img\r\n                            className={p.image}\r\n                            src={'https://www.freeiconspng.com/thumbs/no-image-icon/no-image-icon-4.png'}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className={p.id}>\r\n                    Id: <span className={p.full}>{data.data.userId}</span>\r\n                </div>\r\n                <div className={p.container}>\r\n                    <ProfileStatusWithHooks status={data.status}/>\r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__aQkyU\",\"imp_wrapper\":\"Post_imp_wrapper__Wkpf4\",\"img\":\"Post_img__BTGUO\",\"message\":\"Post_message__YGxxJ\"};","import React from 'react';\r\nimport p from './Post.module.css'\r\n\r\ntype PostType = {\r\n    message: string,\r\n    likes: string\r\n    dislike: string\r\n}\r\n\r\nexport const Post = (props: PostType) => {\r\n\r\n    return (\r\n        <div className={p.post}>\r\n            <div className={p.imp_wrapper}>\r\n            <img className={p.img}\r\n                 src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgdpU3AJn-m6oMRQyXwvkJH4QpVo7W-tkFvw&usqp=CAU'}/>\r\n            <span className={p.message}>{props.message}</span>\r\n            {/*<div>*/}\r\n            {/*    Likes: {props.likes}*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    Dislikes: {props.Dislike}*/}\r\n            {/*</div>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyPosts_wrapper__-wZNH\",\"posts\":\"MyPosts_posts__1vcst\",\"text\":\"MyPosts_text__SOiHo\",\"container\":\"MyPosts_container__Y1UuD\",\"button_wrapper\":\"MyPosts_button_wrapper__6L0wr\",\"button\":\"MyPosts_button__7qjEP\"};","import React from \"react\";\r\nimport {useAppDispatch} from \"../../../redux/hooks\";\r\nimport {AddPostAC} from \"../../../redux/profile-reducer\";\r\nimport {useFormik} from \"formik\";\r\n\r\ntype FormikErrorType = {\r\n    text?: string\r\n}\r\n\r\nexport const ProfileForm = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: ''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.text) {\r\n                errors.text = 'Required'\r\n            }\r\n            if(!values.text.length){\r\n                errors.text = 'Field cannot be empty'\r\n            }\r\n            return errors\r\n        }, onSubmit: values => {\r\n            dispatch(AddPostAC(values.text))\r\n            formik.resetForm()\r\n        }\r\n    })\r\n\r\n\r\n    return <>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input\r\n                    placeholder={'input text...'}\r\n                    {...formik.getFieldProps('text')}\r\n                />\r\n                {formik.errors.text && <div style={{color: 'red'}}>sorry, but field can't be empty</div>}\r\n                <button disabled={!!formik.errors.text} type={'submit'}>send</button>\r\n            </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Post} from \"./Post/Post\";\r\nimport p from './MyPosts.module.css'\r\nimport {ProfileForm} from \"../ProfileForm/ProfileForm\";\r\nimport {useAppSelector} from \"../../../redux/hooks\";\r\n\r\nexport const MyPosts = () => {\r\n\r\n    const posts = useAppSelector(state => state.profileReducer.posts)\r\n    const postsItems = posts.map(p =>\r\n        <Post\r\n            key={p.id}\r\n            message={p.message}\r\n            likes={p.likes}\r\n            dislike={p.dislike}/>)\r\n\r\n\r\n    return (\r\n        <div className={p.wrapper}>\r\n            <h1 className={p.posts}>My posts</h1>\r\n            <ProfileForm/>\r\n            <div>\r\n                {postsItems}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport p from './Profile.module.css'\r\nimport {ProfileInfo} from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={p.content}>\r\n            <ProfileInfo/>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n"],"names":["ProfileStatusWithHooks","props","dispatch","useAppDispatch","useState","toggle","setToggle","status","setStatus","useEffect","className","style","onChange","e","currentTarget","value","onBlur","updateStatus","onDoubleClick","ProfileInfo","data","useAppSelector","state","profileReducer","p","fullName","photos","small","src","userId","Post","message","ProfileForm","formik","useFormik","initialValues","text","validate","values","errors","length","onSubmit","AddPostAC","resetForm","handleSubmit","placeholder","getFieldProps","color","disabled","type","MyPosts","postsItems","posts","map","likes","dislike","id","Profile"],"sourceRoot":""}