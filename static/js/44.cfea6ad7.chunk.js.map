{"version":3,"file":"static/js/44.cfea6ad7.chunk.js","mappings":"kRACA,EAA0B,uB,SCcbA,EAAQ,WAEjB,IAAMC,GAAWC,EAAAA,EAAAA,MACEC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAU,KAEhEC,EAAAA,EAAAA,YAAU,WAIV,GAAG,CAACN,IAEJ,IAAMO,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GACbC,SAAU,SAACC,GACV,IAAMC,EAA0B,CAAC,EAWjC,OAVKD,EAAOJ,MAEA,4CAA4CM,KAAKF,EAAOJ,SAChEK,EAAOL,MAAQ,yBAFfK,EAAOL,MAAQ,WAIdI,EAAOH,SAEDG,EAAOH,SAASM,OAAS,IAChCF,EAAOJ,SAAW,oBAFlBI,EAAOJ,SAAW,WAIfI,CACX,EAAGG,SAAU,SAAAJ,GACTP,EAAOY,YACPnB,GAASoB,EAAAA,EAAAA,IAAQN,IACjBd,GAASqB,EAAAA,EAAAA,KAAiB,GAC9B,IAEEC,KAAWf,EAAOQ,OAAOL,QAASH,EAAOQ,OAAOJ,UAEtD,OAAO,SAACY,EAAA,GAAI,CAACC,WAAS,EAACC,eAAgB,SAAUC,UAAWC,EAAc,UACtE,SAACJ,EAAA,GAAI,CAACK,MAAI,EAACH,eAAgB,SAAS,UAChC,iBAAMP,SAAUX,EAAOsB,aAAa,UAChC,UAACC,EAAA,EAAW,YACR,UAACC,EAAA,EAAS,YACN,qDACI,cAAGC,KAAM,wCACNC,OAAQ,SAAS,uBAGxB,oEACA,sDACA,8CAEJ,UAACC,EAAA,EAAS,YACN,SAACC,EAAA,GAAS,QACNC,MAAM,QACNC,OAAO,UACH9B,EAAO+B,cAAc,WAE5B/B,EAAOgC,SAAWhC,EAAOQ,OAAOL,QAC7B,gBAAKiB,MAAO,CAACa,MAAO,OAAO,SAAEjC,EAAOQ,OAAOL,SAC/C,SAACyB,EAAA,GAAS,QAACM,KAAK,WACLL,MAAM,WACNC,OAAO,UACH9B,EAAO+B,cAAc,cAEnC/B,EAAOgC,SAAWhC,EAAOQ,OAAOJ,WAC7B,gBAAKgB,MAAO,CAACa,MAAO,OAAO,SAAEjC,EAAOQ,OAAOJ,YAC/C,SAAC+B,EAAA,EAAgB,CACbN,MAAO,cACPO,SAAS,SAACC,EAAA,GAAQ,gBACdtB,SAAUA,GACNf,EAAO+B,cAAc,eAAa,IACtCO,QAAStC,EAAOO,OAAOF,iBAE/B,SAACkC,EAAA,EAAM,CAACxB,SAAUA,EAAUmB,KAAM,SAAUM,QAAS,YAAaP,MAAO,UAAU,8BAQ3G,C","sources":["webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__ajBqV\"};","import React, {useEffect} from 'react';\r\nimport {isLoggedInDataAC, loginTC} from \"../../redux/authReducer\";\r\nimport {useFormik} from \"formik\";\r\nimport {useAppDispatch, useAppSelector} from \"../../redux/hooks\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport {Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField} from \"@mui/material\";\r\nimport style from './Login.module.css'\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    rememberMe?: boolean\r\n}\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const isLoggedIn = useAppSelector(state => state.auth.isLoggedIn)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            return\r\n        }\r\n    }, [dispatch])\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        }, validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (!values.email) {\r\n                errors.email = 'Required'\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address'\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required'\r\n            } else if (values.password.length < 3) {\r\n                errors.password = 'Invalid password'\r\n            }\r\n            return errors\r\n        }, onSubmit: values => {\r\n            formik.resetForm()\r\n            dispatch(loginTC(values))\r\n            dispatch(isLoggedInDataAC(true))\r\n        }\r\n    })\r\n    const disabled = formik.errors.email || formik.errors.password ? true : false\r\n\r\n    return <Grid container justifyContent={'center'} className={style.wrapper}>\r\n        <Grid item justifyContent={'center'}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormLabel>\r\n                        <p>To log in get registered\r\n                            <a href={'https://social-network.samuraijs.com/'}\r\n                               target={'_blank'}> here\r\n                            </a>\r\n                        </p>\r\n                        <p>or use common test account credentials:</p>\r\n                        <p>Email: free@samuraijs.com</p>\r\n                        <p>Password: free</p>\r\n                    </FormLabel>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.touched && formik.errors.email &&\r\n                            <div style={{color: 'red'}}>{formik.errors.email}</div>}\r\n                        <TextField type=\"password\"\r\n                                   label=\"Password\"\r\n                                   margin=\"normal\"\r\n                                   {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.touched && formik.errors.password &&\r\n                            <div style={{color: 'red'}}>{formik.errors.password}</div>}\r\n                        <FormControlLabel\r\n                            label={'Remember me'}\r\n                            control={<Checkbox\r\n                                disabled={disabled}\r\n                                {...formik.getFieldProps('rememberMe')}\r\n                                checked={formik.values.rememberMe}\r\n                            />}/>\r\n                        <Button disabled={disabled} type={'submit'} variant={'contained'} color={'primary'}>\r\n                            Login\r\n                        </Button>\r\n                    </FormGroup>\r\n                </FormControl>\r\n            </form>\r\n        </Grid>\r\n    </Grid>\r\n}\r\n\r\n\r\n"],"names":["Login","dispatch","useAppDispatch","useAppSelector","state","auth","isLoggedIn","useEffect","formik","useFormik","initialValues","email","password","rememberMe","validate","values","errors","test","length","onSubmit","resetForm","loginTC","isLoggedInDataAC","disabled","Grid","container","justifyContent","className","style","item","handleSubmit","FormControl","FormLabel","href","target","FormGroup","TextField","label","margin","getFieldProps","touched","color","type","FormControlLabel","control","Checkbox","checked","Button","variant"],"sourceRoot":""}